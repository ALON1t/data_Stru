/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
 import java.util.Deque;
class Solution {
    public List<List<Integer>> levelOrder(TreeNode root) {
    
        List<List<Integer>> list = new LinkedList<>();
        if(root == null) {
            return list;
        }
        Deque<TreeNode> deque = new LinkedList<>();
        deque.addFirst(root);
        int k = 1;  //根节点为第一层 从左到右 第二层从右到左
        while(!deque.isEmpty()) {
            LinkedList<Integer> lef = new LinkedList<>();
            int n = deque.size();
            for(int i = 0;i < n;i++) {
                TreeNode node = deque.removeFirst();
                if (k % 2 == 0) { //逆序
                    lef.addLast(node.val);
                } else { //正序
                    lef.addFirst(node.val);
                }
                if(node.right != null) {
                    deque.addLast(node.right);
                }
                if(node.left != null) {
                    deque.addLast(node.left);
                }
            }
            k++;
            list.add(lef);
        }
        return list;
    }
}
